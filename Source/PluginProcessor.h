/*
 ==============================================================================
 
 This file was auto-generated by the Introjucer!
 
 It contains the basic framework code for a JUCE plugin processor.
 
 ==============================================================================
 */

#ifndef PLUGINPROCESSOR_H_INCLUDED
#define PLUGINPROCESSOR_H_INCLUDED

#include "../JuceLibraryCode/JuceHeader.h"
#include "PluginParameter.h"


//==============================================================================
/**
 */
class Mu45effectAudioProcessor  : public AudioProcessor
{
public:
    //==============================================================================
    Mu45effectAudioProcessor();
    ~Mu45effectAudioProcessor();
    
    //==============================================================================
    void prepareToPlay (double sampleRate, int samplesPerBlock) override;
    void releaseResources() override;
    
    void processBlock (AudioSampleBuffer&, MidiBuffer&) override;
    
    //==============================================================================
    AudioProcessorEditor* createEditor() override;
    bool hasEditor() const override;
    
    //==============================================================================
    const String getName() const override;
    
    bool acceptsMidi() const override;
    bool producesMidi() const override;
    bool silenceInProducesSilenceOut() const override;
    double getTailLengthSeconds() const override;
    
    //==============================================================================
    int getNumPrograms() override;
    int getCurrentProgram() override;
    void setCurrentProgram (int index) override;
    const String getProgramName (int index) override;
    void changeProgramName (int index, const String& newName) override;
    
    //==============================================================================
    void getStateInformation (MemoryBlock& destData) override;
    void setStateInformation (const void* data, int sizeInBytes) override;
    
    // MU4545_DO_THIS: Add a pointer for each user Parameter
    PluginParameter* volumeParam;
    PluginParameter* balanceParam;
    
    // MU4545_DO_THIS: Add any other variables you need here, for example
    // and algorthm params
    float volumeGain;
    float balance;
    
    
private:
    //==============================================================================
    // MU4545_DO_THIS: Add any methods used in algorithm parameter calculation or DSP
    void calcAlgorithmParams();
    
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (Mu45effectAudioProcessor)
};


#endif  // PLUGINPROCESSOR_H_INCLUDED
